{
  "comments": [
    {
      "key": {
        "uuid": "f6a52a4a_c16da15a",
        "filename": "Android.bp",
        "patchSetId": 2
      },
      "lineNbr": 72,
      "author": {
        "id": 1039338
      },
      "writtenOn": "2019-01-10T11:05:40Z",
      "side": 1,
      "message": "What is this needed for?",
      "range": {
        "startLine": 72,
        "startChar": 31,
        "endLine": 72,
        "endChar": 47
      },
      "revId": "d3403698703f37e36786774c7cb3788e33d2d7e5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3ff3fc17_5bb51264",
        "filename": "Android.bp",
        "patchSetId": 2
      },
      "lineNbr": 72,
      "author": {
        "id": 1187124
      },
      "writtenOn": "2019-01-10T11:23:51Z",
      "side": 1,
      "message": "The metalava checks for a few errors that doclava did not. So I have to either suppress those errors or add public class (you can see the detail code change at https://android-review.googlesource.com/c/platform/external/apache-http/+/865432/1).\nI added this option to avoid APIs change.",
      "parentUuid": "f6a52a4a_c16da15a",
      "range": {
        "startLine": 72,
        "startChar": 31,
        "endLine": 72,
        "endChar": 47
      },
      "revId": "d3403698703f37e36786774c7cb3788e33d2d7e5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d91ddc79_d56a4e12",
        "filename": "Android.bp",
        "patchSetId": 2
      },
      "lineNbr": 72,
      "author": {
        "id": 1004689
      },
      "writtenOn": "2019-01-10T15:20:31Z",
      "side": 1,
      "message": "You can have a hidden class, but if you at some point happen to reference that hidden class from a public API, such as a parameter type, a return type, etc, then doclava would make that class unhidden and part of the API! (*Without* that class showing up as a separate class entry in the signature file being added). We\u0027ve had several pieces of API accidentally leaked in this way.\n\nSo in metalava this was first a warning; then somebody on the framework team went through and fixed all the warnings by actually exposing the API etc, and then we turned it into an error. Of course, this wasn\u0027t done for the various libraries not yet built with metalava, so that\u0027s why this is an issue now.\n\nHowever, we don\u0027t have to turn off the error, we can use baselines instead which is another metalava feature where we check in a file which lists exactly the current set of errors, and those are silently ignored. That way any *new* errors in the future will be warned against. Sundong, take a look at https://googleplex-android-review.git.corp.google.com/c/platform/external/apache-http/+/5970684 to see the baselines I used for this project. But I\u0027m fine either way, let\u0027s just get doclava dropped asap :-)",
      "parentUuid": "3ff3fc17_5bb51264",
      "range": {
        "startLine": 72,
        "startChar": 31,
        "endLine": 72,
        "endChar": 47
      },
      "revId": "d3403698703f37e36786774c7cb3788e33d2d7e5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}